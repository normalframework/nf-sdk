#      ___           ___   
#     /__/\         /  /\  
#     \  \:\       /  /:/_ 
#      \  \:\     /  /:/ /\
#  _____\__\:\   /  /:/ /:/
# /__/::::::::\ /__/:/ /:/ 
# \  \:\~~\~~\/ \  \:\/:/  
#  \  \:\  ~~~   \  \::/   
#   \  \:\        \  \:\   
#    \  \:\        \  \:\  
#     \__\/         \__\/
#     
#

# Welcome to the NF example docker-compose.  This file should stand up
# a mostly functioning NF instance on your desktop.  Before running
# you should just check a few things:
#  1. several containers need a writable volume, which this file puts in /tmp by default
#  2. if the BACnet service fails to start, you may need to specify
#   which interface to use in its environment.

version: "2.2"
services:

  # this is the load balancer through which you access all APIs and the console.
  # See envoy.yaml in this conf as a starting point to adapt to your
  #  own configuration.
  envoy:
    image: normalframework/envoy:1.1.2
    env_file: .env.1.1
    command: /usr/local/bin/env-envoy --log-level debug
    networks:
      - internal
    ports:
      - "8080:8080"    

  # Most persistent data is in redis.  This is essentially an
  #  unmodified upstream with RediSearch and RedisTimeseries installed.
  redis:
    image: normalframework/redis:1.1.2
    networks:
      - internal

    # Set this to a directory where the redis backing store can be written
    volumes:
        - /tmp/devdata:/data

    ports:
      - "6379:6379"
    
  # Static nginx server with the console web assets.
  admin-static:
    env_file: .env.1.1
    image: normalframework/nf-console:1.1.2
    networks:
      - internal
    depends_on:
      - redis
      # otherwise this sometimes doesn't start due to the promethesis reverse proxies
      - poll-service
      - bacnet-service
    
  # BACnet service.  Unlike the the other services, this must run in
  #  network host mode; otherwise UDP broadcast works badly for discovery.  
  bacnet-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf bacnet-hpl  #-memprofile mem.prof
    # provide a volume here to persist bacnet settings
    volumes:
      - /tmp/nf-bacnet/:/etc/bacnet/

    depends_on:
      - redis
    networks:
      - internal

  bacnet-simulator:
    image: stevedh/bactools
    command: server
    
    networks:
      - internal
    environment:
      - BACNET_IP_DEBUG=1

  # Service that manages scanning the local network for BACnet devices
  scan-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf bacnet-scan
    networks:
      - internal
    depends_on:
      - redis
      - point-service
    
  # Service that collects data by polling configured points.
  poll-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf bacnet-poll 
    networks:
      - internal
    depends_on:
      - redis
      - point-service
    
  # the points database
  point-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf point
    networks:
      - internal
    depends_on:
      - redis
    # set these to a directory which can be used to store pending data
    volumes:
      - /tmp/nf-spool-data:/data
      - /tmp/nf-spool-errors:/errors

    environment:
      - DEBUG=1
      - DATA_LOG_DIR=/data
      - ERROR_LOG_DIR=/errors

  # Tracks the state of devices in the network
  bacnet-status-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf hpl-status
    networks:
      - internal

  # Provides frontend configuration information like site name and auth configuration
   # unauthenticated
  platform-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf platform
    networks:
      - internal      

  # Create sparkplug services to send data out using MQTT
  #  See the configuration guide on docs.normal.1.1 for example setup.
  sparkplug-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf sparkplug
    networks:
      - internal
#   environment:
#     - MQTT_BROKER=localhost
   
  # Create sparkplug services to send data out using MQTT
  #  See the configuration guide on docs.normal.1.1 for example setup.
  command-service:
    image: normalframework/nf:1.1.2
    env_file: .env.1.1
    command: nf command
    networks:
      - internal


networks:
  # the services all talk on this network which is only exposed through envoy
  internal:
